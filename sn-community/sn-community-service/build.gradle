jar {
    baseName = 'sn-community-service'
}

apply plugin: 'org.springframework.boot'
apply plugin: "io.spring.dependency-management"

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-web') {
        exclude module: 'spring-boot-starter-tomcat'
    }
    compile('org.springframework.boot:spring-boot-starter-undertow')
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.cloud:spring-cloud-starter-netflix-zuul')
    compile('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')
    compile("org.springframework.cloud:spring-cloud-starter-oauth2:${springCloudSecurityVersion}")
    compile("org.springframework.cloud:spring-cloud-starter-security:${springCloudSecurityVersion}")

    compile("org.hsqldb:hsqldb:${hsqldbVersion}")

    compile("org.projectlombok:lombok:${lombokVersion}")

    runtime "javax.xml.bind:jaxb-api:${jaxbApiVersion}"
    runtime "com.sun.xml.bind:jaxb-core:${jaxbApiVersion}"
    runtime "com.sun.xml.bind:jaxb-impl:${jaxbApiVersion}"
    runtime "javax.activation:activation:${activationVersion}"

    compile project(':sn-community:sn-community-db-schema')
    compile project(':sn-common:sn-exception-config')
    compile project(':sn-common:sn-jpa-config')

    testCompile project(':sn-community:sn-community-db-schema')
    testCompile project(':sn-common:sn-exception-config')
    testCompile project(':sn-common:sn-jpa-config')

    testCompile('org.springframework.boot:spring-boot-starter-test')
}

docker {
    name "social-network/${bootJar.baseName}"
    tags 'latest'
    dockerfile file('src/main/docker/Dockerfile')
    files bootJar.archivePath
    buildArgs(['JAR_FILE': "${bootJar.archiveName}"])
}