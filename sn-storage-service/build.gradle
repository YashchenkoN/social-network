jar {
    baseName = 'sn-storage-service'
}

apply plugin: 'org.springframework.boot'
apply plugin: "io.spring.dependency-management"

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-web') {
        exclude module: 'spring-boot-starter-tomcat'
    }
    compile('org.springframework.boot:spring-boot-starter-undertow')
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile("org.springframework.cloud:spring-cloud-starter-oauth2:${springCloudSecurityVersion}")
    compile("org.springframework.cloud:spring-cloud-starter-security:${springCloudSecurityVersion}")

//    compile("org.projectlombok:lombok:${lombokVersion}")
    compileOnly         name: 'lombok-edge'
    annotationProcessor name: 'lombok-edge'

    compile('commons-io:commons-io:2.6')
    compile('com.amazonaws:aws-java-sdk:1.11.323')

    runtime "javax.xml.bind:jaxb-api:${jaxbApiVersion}"
    runtime "com.sun.xml.bind:jaxb-core:${jaxbApiVersion}"
    runtime "com.sun.xml.bind:jaxb-impl:${jaxbApiVersion}"
    runtime "javax.activation:activation:${activationVersion}"

    compile project(':sn-common:sn-exception-config')

    testCompile("org.springframework:spring-test:${springVersion}")
    testCompile("org.springframework.boot:spring-boot-test:${springBootVersion}")
    testCompile("org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}")
    testCompile("org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}")
    testCompile("org.hamcrest:hamcrest-all:${hamcrestVersion}")
    testCompile('com.jayway.jsonpath:json-path:2.4.0')
}

docker {
    name "social-network/${bootJar.baseName}"
    tags 'latest'
    dockerfile file('src/main/docker/Dockerfile')
    files bootJar.archivePath
    buildArgs(['JAR_FILE': "${bootJar.archiveName}"])
}